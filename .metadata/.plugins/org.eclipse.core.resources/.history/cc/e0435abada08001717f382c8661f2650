package br.inpe.log;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.LinkOption;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.attribute.FileAttribute;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Log {
	
	private Path path;
	
	public Log(String path) throws IOException{
		
		this.path = Paths.get(path);
		if(Files.notExists(this.path, LinkOption.NOFOLLOW_LINKS));
			Files.createFile(this.path);
	}
	
	public void verificacao(){
		List<String> lines;
		try {
			lines = Files.readAllLines(this.path);
			lines.get(lines.size()-1);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
		
		
	
	}
	
	public void setLog(String pathOriginal, String pathDestination){
		
		List<String> lines;
		
		try {
			
			lines = Files.readAllLines(path);
			lines.add("PATH_ORIGINAL = " + pathOriginal);
			lines.add("PATH_DESTINATION = " + pathDestination);
			Files.write(path, lines);
				
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public void deleteLog() throws IOException{
		Files.delete(path);
	}
	
	private Map<String,String> getLog(){
		List<String> lines;
		Map<String,String> map = null;
	
		try {
		lines = Files.readAllLines(path);
		map = new HashMap<>();
		
		String log = lines.get(lines.size()-1);
		if (log.contains("="))
			map.put(log.substring(0, log.indexOf("=")-1), log.substring(log.indexOf("=")+2));
		else
			map.put(log, "");
		
		return map;

		}catch (IOException e) {
		e.printStackTrace();
	}

		return map;
	}
	
	public void setLog(FileSystemResult type){
		
		List<String> lines;
		
		try {
			
			lines = Files.readAllLines(path);
			lines.add(type.toString());
			Files.write(path, lines);
				
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
}
