package br.inpe.log;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.LinkOption;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class Log {

	private Path path;
	private ArrayList<String> listZero;
	public Log(String path) throws IOException {

		this.path = Paths.get(path);
		this.listZero = new ArrayList<>();
		
		if (Files.notExists(this.path, LinkOption.NOFOLLOW_LINKS))
			Files.createFile(this.path);
	}

	public void verificacao() throws IOException {
		
		List<String> lines;
		lines = Files.readAllLines(path);
		int size = lines.size() - 1;
		
		if (size > -1) {
			
			switch (FileSystemResult.valueOf(lines.get(size))) {
			case CREATE_SUCCESSFUL:
				System.out.println("a");
				break;
			case MOVE_SUCCESSFUL:
				System.out.println("b");
				break;
			case DELETE_SUCCESSFUL:
				System.out.println("c");
				break;
			default:
				System.out.println("d");
				break;
			}
		}
	}

	public void setLogPathOriginalAndDestination(String pathOriginal, String pathDestination) {

		try {

			List<String> lines = Files.readAllLines(path);
			lines.add(pathOriginal);
			lines.add(pathDestination);
			
			Files.write(path, lines);

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public void deleteLog() throws IOException {
		
		Files.write(this.path, this.listZero);
	}

	public void setLogSucessful(FileSystemResult type) {

		try {

			List<String> lines = Files.readAllLines(path);
			lines.add(type.toString());
			Files.write(path, lines);

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
