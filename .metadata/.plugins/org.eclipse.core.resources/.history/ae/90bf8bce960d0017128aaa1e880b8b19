package br.inpe.controller;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import br.inpe.view.View;
import com.fasterxml.jackson.annotation.JsonView;

import br.inpe.model.ImagesCollection;
import br.inpe.service.ImageService;

@RestController
@RequestMapping(value = "/usuario")
public class ImageController {

	@Autowired
	private ImageService imageService;

	public void setUsuarioService(ImageService imageService) {
		this.imageService = imageService;
	}


	@RequestMapping(value = "/get/{nome}")
	@JsonView(View.All.class)
	public ResponseEntity<Collection<ImagesCollection>> pesquisar(@PathVariable("nome") String nome) {
		return new ResponseEntity(imageService.buscarImage(nome), HttpStatus.OK);
	}

	@RequestMapping(value = "/getById")
	@JsonView(View.All.class)
	public ResponseEntity<ImagesCollection> get(@RequestParam(value = "id", defaultValue = "1") String id) {

		ImagesCollection usuario = imageService.buscarImage(id);
		if (usuario == null) {
			return new ResponseEntity<ImagesCollection>(HttpStatus.NOT_FOUND);
		}
		return new ResponseEntity<ImagesCollection>(usuario, HttpStatus.OK);
	}

	@RequestMapping(value = "/getAll")
	@JsonView(View.Alternative.class)
	public ResponseEntity<Collection<ImagesCollection>> getAll() {
		return new ResponseEntity<Collection<ImagesCollection>>(imageService.buscarTodos(), HttpStatus.OK);
	}

	// Voce pode informar o metodo e o tipo de retorno produzido
//
//	@RequestMapping(value = "/save", method = RequestMethod.POST, produces =
//	MediaType.APPLICATION_JSON_VALUE)
//	@JsonView(View.All.class)
//	// E possivel indicar o status por anotacao, mas sera fixo, sem
//	// possibilidade de tratar erros
//	@ResponseStatus(HttpStatus.CREATED)
//	public Usuario save(@RequestBody Usuario usuario, HttpServletRequest request,
//			HttpServletResponse response) {
//		usuario = usuarioService.salvar(usuario);
//		response.addHeader("Location", request.getServerName() + ":" + request.getServerPort() +
//				request.getContextPath() + "/usuario/getById?id=" + usuario.getId());
//		return usuario;
//
//	}
}
