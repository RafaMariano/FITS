package br.gov.sp.fatec.web.controller;

import java.util.Collection;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseStatus;

import com.fasterxml.jackson.annotation.JsonView;

import br.gov.sp.fatec.model.Autorizacao;
import br.gov.sp.fatec.model.Funcionario;
import br.gov.sp.fatec.model.Usuario;
import br.gov.sp.fatec.service.FuncionarioService;
import br.gov.sp.fatec.view.View;

public class FuncionarioController {
	@Autowired
	private FuncionarioService funcionarioService;

	public void setFuncionarioService(FuncionarioService funcionarioService) {
		this.funcionarioService = funcionarioService;
	}
	
	@RequestMapping(value = "/autorizacao/get/{nome}")
	public ResponseEntity<Collection<Autorizacao>> pesquisar(@PathVariable("nome") String nome) {
		// Seria possivel incluir um try/catch e retornar um HttpStatus.INTERNAL_SERVER_ERROR, por exemplo
		return new ResponseEntity<Collection<Autorizacao>>(autorizacaoService.buscar(nome), HttpStatus.OK);
	}
	
	@RequestMapping(value = "/autorizacao/getAll")
	public ResponseEntity<Collection<Autorizacao>> getAll() {
		return new ResponseEntity<Collection<Autorizacao>>(autorizacaoService.todos(), HttpStatus.OK);
	}
	
	// Voce pode informar o metodo e o tipo de retorno produzido
	@RequestMapping(value = "/save", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)
	@JsonView(View.All.class)
	// E possivel indicar o status por anotacao, mas sera fixo, sem possibilidade de tratar erros
	@ResponseStatus(HttpStatus.CREATED)
	public Usuario save(@RequestBody Funcionario func, HttpServletRequest request, HttpServletResponse response) {
		func = funcionarioService.save(func);
		response.addHeader("Location", request.getServerName() + ":" + request.getServerPort() + request.getContextPath() + "/usuario/getById?id=" + func.getId());
		return func;
	}
	
}
